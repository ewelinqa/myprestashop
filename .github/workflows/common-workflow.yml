name: Common workflow
on:
  workflow_call:
    outputs:
      REPORT_URL:
        description: 'Allure report URL'
        value: ${{ jobs.run-tests.outputs.REPORT_URL }}
    inputs:
      run_script:
        description: 'Script to run'
        required: true
        type: string
      TEST_NAMES:
        required: false
        type: string
jobs:
  run-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    outputs:
      REPORT_URL: ${{ steps.set-allure-output.outputs.REPORT_URL }}
    env:
      BASE_URL: ${{ vars.BASE_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm
          registry-url: 'https://registry.npmjs.org/'

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages['node_modules/@playwright/test'].version)")" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Cache node_modules
        uses: actions/cache@v3
        id: node-cache
        with:
          path: |
            node_modules
          key: node_modules-${{ hashFiles('package-lock.json') }}

      - name: Update npm to the latest version
        run: npm install -g npm@latest

      - name: Remove always-auth from npm config
        run: npm config delete always-auth

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Cache JDK
        id: cache-java
        uses: actions/cache@v3
        with:
          path: /usr/lib/jvm
          key: jdk-11-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            jdk-11-${{ runner.os }}

      - name: Install JDK
        if: steps.cache-java.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

      - name: Check Java version
        run: java -version

      - name: Run Playwright tests
        id: run-tests
        run: ${{ inputs.run_script }}

      - name: Archive tests results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: 'playwright-report/*.*'

      - name: Checkout gh-pages
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages-dir

      - name: Allure Report Action
        uses: mgrybyk-org/allure-report-branch-js-action@v1.4.5
        if: always()
        continue-on-error: true
        id: allure
        with:
          report_id: ${{ github.workflow }}
          gh_pages: 'gh-pages-dir'
          report_dir: 'allure-results'
          max_reports: 15

      - name: Set Allure Report URL as Output
        if: always()
        id: set-allure-output
        run: |
          if [[ -n "${{ steps.allure.outputs.REPORT_URL }}" ]]; then
           echo "REPORT_URL=${{ steps.allure.outputs.REPORT_URL }}" >> $GITHUB_OUTPUT
          fi

      - name: Git Commit and Push Action
        uses: mgrybyk-org/git-commit-pull-push-action@v1
        if: always()
        with:
          repository: gh-pages-dir
          branch: gh-pages
          pull_args: --rebase -X ours

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
